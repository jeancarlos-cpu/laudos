{"version":3,"sources":["components/header/header.component.jsx","components/fetch-field/fetch-field.component.jsx","db.js","pages/homepage/homepage.component.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","menuButtom","padding","cursor","loginButton","marginLeft","display","Header","classes","className","root","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","Typography","variant","title","Button","onClick","alignItems","justifyContent","select","marginTop","fontSize","width","FetchField","data","React","useState","options","setOptions","currentOption","setCurrentOption","useEffect","map","item","index","label","Object","values","reduce","acc","value","concat","maxMenuHeight","styles","menu","provided","zIndex","borderRadius","colors","primary25","primary","spacing","baseUnit","TextFieldProps","placeholder","onChange","e","laudos","empresa","codigo","mina","complexo","responsavel","nit","dataEmissao","dataValidade","Homepage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c4fd921.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menuButtom: {\r\n    padding: \"10px\",\r\n    cursor: \"pointer\"\r\n  },\r\n  loginButton: {\r\n    marginLeft: \"auto\",\r\n    display: \"none\" // modify after creating login\r\n  }\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Button color=\"inherit\" onClick={() => {}}>\r\n              Cadastro\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={() => {}}>\r\n              Busca\r\n            </Button>\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.loginButton}>Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { width } from \"@material-ui/system\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  select: {\r\n    marginTop: \"20px\",\r\n    fontSize: \"1.2em\",\r\n    width: \"80%\"\r\n  }\r\n}));\r\n\r\nconst FetchField = ({ data }) => {\r\n  const classes = useStyles();\r\n\r\n  const [options, setOptions] = React.useState([]);\r\n  const [currentOption, setCurrentOption] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    setOptions(\r\n      data.map((item, index) => ({\r\n        label: Object.values(item).reduce(\r\n          (acc, value) => acc.concat(\" - \", value),\r\n          \"\"\r\n        ),\r\n        value: index\r\n      }))\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Select\r\n        className={classes.select}\r\n        value={currentOption}\r\n        maxMenuHeight={390}\r\n        styles={{\r\n          menu: provided => ({ ...provided, zIndex: 9999 })\r\n        }}\r\n        theme={theme => ({\r\n          ...theme,\r\n          borderRadius: 5,\r\n          colors: {\r\n            ...theme.colors,\r\n            primary25: \"#D8D6D9\",\r\n            primary: \"#3f51b5\"\r\n          },\r\n          spacing: {\r\n            baseUnit: 8.5\r\n          }\r\n        })}\r\n        TextFieldProps={{\r\n          label: \"data\"\r\n        }}\r\n        placeholder=\"Selecionar Laudo (Empresa, Codigo, Mina, Complexo, Responsável, NIT, Data Emissão, Data Validade)\"\r\n        options={options}\r\n        onChange={e => setCurrentOption(e)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchField;\r\n","export const laudos = [\r\n    {\r\n        empresa: \"Mertz LLC\",\r\n        codigo: \"4859\",\r\n        mina: \"South Anabelborough\",\r\n        complexo: \"Lake Jorge\",\r\n        responsavel: \"Reynold Kunze\",\r\n        nit: \"30611\",\r\n        dataEmissao: \"2019-08-09\",\r\n        dataValidade: \"2020-01-03\",\r\n    },\r\n    {\r\n        empresa: \"Dickens, Zboncak and Haley\",\r\n        codigo: \"793\",\r\n        mina: \"Schuylerhaven\",\r\n        complexo: \"Selenatown\",\r\n        responsavel: \"Norene Schiller\",\r\n        nit: \"56532\",\r\n        dataEmissao: \"2018-06-10\",\r\n        dataValidade: \"2020-01-09\",\r\n    },\r\n    {\r\n        empresa: \"Mertz, Johns and Reichert\",\r\n        codigo: \"96203\",\r\n        mina: \"Hartmannland\",\r\n        complexo: \"Kuhnburgh\",\r\n        responsavel: \"Terrell Hansen DVM\",\r\n        nit: \"17037\",\r\n        dataEmissao: \"2004-05-28\",\r\n        dataValidade: \"2010-08-06\",\r\n    },\r\n    {\r\n        empresa: \"O'Connell LLC\",\r\n        codigo: \"32715\",\r\n        mina: \"Armandohaven\",\r\n        complexo: \"West Isabellmouth\",\r\n        responsavel: \"Tyrell MacGyver\",\r\n        nit: \"1192\",\r\n        dataEmissao: \"2019-16-04\",\r\n        dataValidade: \"2019-10-12\",\r\n    },\r\n    {\r\n        empresa: \"Hermann and Sons\",\r\n        codigo: \"9767\",\r\n        mina: \"Legrosstad\",\r\n        complexo: \"Port Myrtle\",\r\n        responsavel: \"Miss Timmothy Stehr\",\r\n        nit: \"19695\",\r\n        dataEmissao: \"2018-09-07\",\r\n        dataValidade: \"2019-01-02\",\r\n    },\r\n];","import React from \"react\";\r\nimport Header from \"../../components/header/header.component\";\r\nimport FetchField from \"../../components/fetch-field/fetch-field.component\";\r\nimport { laudos } from \"../../db\";\r\n\r\nconst Homepage = () => (\r\n  <div>\r\n    <Header />\r\n    <FetchField data={laudos} />\r\n  </div>\r\n);\r\n\r\nexport default Homepage;\r\n","import React from 'react';\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}